version: '3.5'

networks:
  work-docker-net:
    driver: bridge
    ipam: 
      config: 
        - subnet: ${PROJECT_IP}/16
services: #表示这是一组服务 
### PHP-FPM #########################################
  php-fpm:
    build:
      context: ../docker-build/php-fpm
    container_name: php-fpm #应用的mysql的镜像名称
    expose:
      - "9000"
    restart: always #docker服务重启后nginx的docker容器也重启
    volumes:
      - ../docker-build/php-fpm/php-ini-overrides.ini:/etc/php/7.4/fpm/conf.d/99-overrides.ini
      - D:\WorkSpace\simple:/var/www:cached
    networks:
      work-docker-net:
        ipv4_address: ${PROJECT_IP_24}.1
    # networks:
    #   - backend
### NGINX Server #########################################
  nginx:
    build:
      context: ../docker-build/nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    container_name: nginx
    volumes:
      - D:\WorkSpace\simple:/var/www:cached
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    restart: always #docker服务重启后nginx的docker容器也重启
    links:
      - php-fpm # 连接php的docker容器 会在host文件生成 php 192.169.1.101(php 容器的局域网ip)
    # depends_on:
    #   - php-fpm
    networks:
      work-docker-net:
        ipv4_address: ${PROJECT_IP_24}.2