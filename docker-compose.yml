version: '3.5'

networks:
  my_docker_net:
    driver: bridge
services: #表示这是一组服务 
### NGINX Server #########################################
  qnginx:
    build: 
      context: 'docker-build/qnginx'
    container_name: qnginx
    volumes: 
      - ${WORKSPACE}:/var/www:cached
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      # - './docker-build/qnginx/nginx:/etc/nginx'
    ports: 
      - "3180-3190:80-90"
    restart: always #docker服务重启后nginx的docker容器也重启
    links:
      - php-super # 连接php的docker容器 会在host文件生成 php 192.169.1.101(php 容器的局域网ip)
    networks:
      - my_docker_net
  nginx:
    build:
      context: docker-build/nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    container_name: nginx
    volumes:
      - ${WORKSPACE}:/var/www:cached
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    restart: always #docker服务重启后nginx的docker容器也重启
    links:
      - php-super # 连接php的docker容器 会在host文件生成 php 192.169.1.101(php 容器的局域网ip)
    # depends_on:
    #   - php-fpm
    networks:
      - my_docker_net
  redis:
    build:
      context: docker-build/redis
    # image: redis
    container_name: redis
    restart: always #docker服务重启后nginx的docker容器也重启
    ports:
      - "6379:6379" #映射的端口，redis容器的6379端口映射到本地的6379端口，可以通过ip:6379访问容器
    networks:
      - my_docker_net
    volumes:
      # 挂载数据目录
      - ${DOCKER_DATA_PATH}${REDIS_DATA_PATH}:/data
  mysql:
    build:
      context: docker-build/mysql
    # image: mysql #应用的mysql的镜像名称
    container_name: mysql #应用的mysql的镜像名称
    restart: always #docker服务重启后nginx的docker容器也重启
    ports:
      - "3306:3306" #映射的端口，redis容器的6379端口映射到本地的6379端口，可以通过ip:6379访问容器
    environment:
      MYSQL_ROOT_PASSWORD: root_password # root用户的密码
      MYSQL_USER: user # 创建新用户
      MYSQL_PASSWORD: user_password # 新用户的密码
    volumes:
      # - ${DOCKER_DATA_PATH}mysql-conf:/etc/mysql #本地mysql映射到docker
      - ${DOCKER_DATA_PATH}${MYSQL_DATA_PATH}:/var/lib/mysql #本地mysql映射到docker
    networks:
      - my_docker_net
  mongo:
    build:
      context: docker-build/mongodb
    # image: mongo
    container_name: mongo
    restart: always #docker服务重启后nginx的docker容器也重启
    ports:
      - "27017:27017" #映射的端口，redis容器的6379端口映射到本地的6379端口，可以通过ip:6379访问容器
    volumes:
      # 挂载数据目录
      - ${DOCKER_DATA_PATH}${MONGODB_DATA_PATH}:/data/db
    networks:
      - my_docker_net
  php-super:
    working_dir: /var/www
    build:
        context: ./docker-build/php-super
        dockerfile: Dockerfile
        # args:
            # WWWGROUP: '${WWWGROUP:-20}'
    container_name: php-super #应用的mysql的镜像名称
    restart: always #docker服务重启后nginx的docker容器也重启
    image: php-super
    expose:
      - "9000"
    environment:
        LARAVEL_SAIL: 1
    volumes:
        - ${WORKSPACE}:/var/www:cached
    networks:
      - my_docker_net
    extra_hosts:
      transaction-ifang.58v5.cn : 172.29.25.120
      open-ifang.58v5.cn : 172.29.25.120
      financeapi-ifang.58v5.cn : 172.29.25.120
      api-ifang.58v5.cn : 172.29.25.120
      dmapi-ifang.58v5.cn : 172.29.25.120
      imapi-ifang.58v5.cn : 172.29.25.120
      cmapi-ifang.58v5.cn : 172.29.25.120
      ifang.58v5.cn : 172.29.25.120
      ifangapi.58v5.cn : 172.29.25.120
      ifangdkt.58v5.cn : 172.29.25.120
      ifangapi-rewardapi.58v5.cn : 172.29.25.120
      daiketong.58v5.cn : 172.29.25.120
      oldapi-ifang.58v5.cn : 172.29.25.120
      static.58.com : 192.168.67.173
      j1.58cdn.com.cn : 192.168.67.173
      j2.58cdn.com.cn : 192.168.67.173
      c.58cdn.com.cn : 192.168.67.173
      img.58cdn.com.cn : 192.168.67.173
      te.union.vip.58.com : 192.168.178.19
      sso.test.58.com : 192.168.177.150
      t.union.web.58dns.org : 192.168.178.19
      controler1.srvmgr.service.58dns.org : 192.168.67.230
      controler2.srvmgr.service.58dns.org : 192.168.67.230
      controler3.srvmgr.service.58dns.org : 192.168.67.230
      controler4.srvmgr.service.58dns.org : 192.168.67.230
      flux.collector.srvmgr.58dns.org : 192.168.67.230
      fluxcontrol.collector.srvmgr.58dns.org : 192.168.67.230
      srvmgrregist1.service.58dns.org : 192.168.67.230
      srvmgrregist2.service.58dns.org : 192.168.67.230
      srvmgrregist3.service.58dns.org : 192.168.67.230
      srvmgrregist4.service.58dns.org : 192.168.67.230
      wconfig.58dns.org : 10.9.196.118
    links:
      - mysql
      - mongo
      - redis
